generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Parade {
  id          Int       @id @default(autoincrement())
  name        String?
  status      String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
}

model Coral {
  id                 Int           @id @default(autoincrement())
  name               String
  arrivalWindowStart DateTime      @db.Time(6)
  createdAt          DateTime      @default(now())
  arrivalWindowEnd   DateTime?     @db.Time(6)
  order              Int[]         @default([])
  Participant        Participant[]
}

model Participant {
  id           Int        @id @default(autoincrement())
  name         String
  type         String?
  contactEmail String?
  contactPhone String?
  infoTextOne  String?
  infoTextTwo  String?
  specialOrder Int?
  coralId      Int
  checkedIn    Boolean    @default(false)
  paradeOrder  Int?
  createdAt    DateTime?  @default(now())
  updatedAt    DateTime?
  Coral        Coral      @relation(fields: [coralId], references: [id])
  CheckIns     CheckIns[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model CheckIns {
  id            Int         @id @default(autoincrement())
  participantId Int
  coralId       Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
  Participant   Participant @relation(fields: [participantId], references: [id])
}

model TestEntity {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  checkin     Boolean
  createdAt   DateTime @default(now())
}
